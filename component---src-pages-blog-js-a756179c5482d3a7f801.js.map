{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["Head1","Content","ArticleDate","MarkerHeader","LightLine","IndexPage","data","title","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","Date","map","key","id","to","path","css","date","query"],"mappings":"oNAQMA,EAAK,oGAKLC,EAAO,2HAMPC,EAAW,+FAKXC,EAAY,4HAUZC,GAJW,+FAIF,4G,+DA2CAC,UAtCG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OAEE,YAAC,IAAD,KAEE,YAAC,IAAD,CAAKC,MAAM,SACX,YAACN,EAAD,KACE,YAACD,EAAD,eADF,IACwB,uBADxB,IAC8B,uBAC3BM,EAAKE,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAEjC,OADa,IAAIG,KAAKH,GACR,IAAIG,QAEnBC,KAAI,gBAAGH,EAAH,EAAGA,KAAH,OACH,mBAAKI,IAAKJ,EAAKK,IACb,YAAC,OAAD,CACEC,GAAIN,EAAKC,YAAYM,KACrBC,IAAG,GAKH,YAACjB,EAAD,KAAeS,EAAKC,YAAYN,QAElC,uBACE,YAACL,EAAD,KAAcU,EAAKC,YAAYQ,OAEjC,YAACjB,EAAD,aAYP,IAAMkB,EAAK","file":"component---src-pages-blog-js-a756179c5482d3a7f801.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Head1 = styled.h1`\n    text-align: center;\n    font-size: 3rem;\n`\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  font-size: 1.7em;\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\nconst LightLine = styled.hr`\n    border-top: 1px dotted gray;\n    opacity: 0.6;\n}`\n\nconst IndexPage = ({ data }) => {\n  return (\n\n    <Layout>\n\n      <SEO title=\"Blog\" />\n      <Content>\n        <Head1> Blog </Head1> <br/> <br/>\n        {data.allMarkdownRemark.edges\n          .filter(({ node }) => {\n            const rawDate = node.frontmatter.rawDate\n            const date = new Date(rawDate)\n            return date < new Date()\n          })\n          .map(({ node }) => (\n            <div key={node.id}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title}</MarkerHeader>\n              </Link>\n              <div>\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\n              </div>\n              <LightLine/>\n            </div>\n\n          ))}\n\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD/MM/YYYY\")\n            rawDate: date\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}